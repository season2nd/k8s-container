Deployment
replicaSet을 제어하는 parent역할을 합니다 

deployment의 궁긍적인 목표는 배포와 rollout, rollup을 하기 위해서 만들어 졌습니다 

1. 개수를 보장해 줍니다 
2. 기존의 내가 서비스하는 버전을 다 recording뜰수 있습니다 
3. recording 이후에는 내가 원하는 버전으로 win back할수 있습니다.


작동원리
1. deployment가 rs를 하나 만듭니다 
2. rs에서는 실행시킬 pod를 만듭니다(예)nginx1.14 버전등. 
rs는 controller처럼 pod의 개수를 보장해 줍니다.

kubectl create deployment deploy --image=nginx:1.14 --dry-run=client -o yaml >deploy.yaml


# kubectl create -f deploy.yaml --record=true

# kubectl get deployments.apps deploy 
NAME     READY   UP-TO-DATE   AVAILABLE   AGE
deploy   3/3     3            3           3m

# kubectl set image deployment deploy deploy nginx=nginx:1.15 --record=true

# kubectl rollout history deployment deploy 

# kubectl set image deployment deploy deploy nginx=nginx:1.16 --record=true

모니터링 명령어 입니다 
실시간 확인 watch를 붙입니다

#watch kubectl rollout status deployment deploy
#watch kubectl rollout resume deployment deploy
#watch kubectl rollout pause deployment deploy

rollout은 서비스 대상은 아래의 3가지 입니다 
  *  deployments
  *  daemonsets
  *  statefulsets
# kubectl rollout undo deployment deploy   : 현재 버전에서 그 전버전으로 가겠다라는 의미 입니다 

# kubectl rollout undo deployment deploy --to-revision=1  
history로 확인한 revision에서 내가 원하는 revision 숫자를 넣어서 원하는 버전으로 다시 rollout할수 있습니다 
 
 deployment 
[root@master ~]# kubectl delete deployments.apps deploy 
deployment.apps "deploy" deleted


